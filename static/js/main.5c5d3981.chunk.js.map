{"version":3,"sources":["Intro.js","Project.js","projectsAPI.js","Projects.js","serviceWorker.js","index.js"],"names":["Intro","react_default","a","createElement","className","src","alt","React","Component","Project","concat","this","props","logo","name","href","url","title","target","Data","id","stack","Projects","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","data","Fragment","map","item","console","log","src_Project_0","key","Boolean","window","location","hostname","match","ReactDOM","render","src_Intro_0","document","getElementById","src_Projects_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c5d3981.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Intro.css\";\n\nclass Intro extends React.Component {\n  render() {\n    return (\n      <section className=\"intro\">\n        <div className=\"container\">\n          <div className=\"row flex-container\">\n            <div className=\"col-xs-12 col-sm-6\">\n              <h1>\n                <span>I'm</span> <span>Reymundo</span> <span>Tenorio</span>\n              </h1>\n              <h2>Software Developer</h2>\n            </div>\n\n            <div className=\"col-xs-12 col-sm-6\">\n              <div className=\"image-container\">\n                <img src=\"/images/develop.svg\" className=\"img-responsive\" alt=\"Develop\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Intro;\n","import React from \"react\";\nimport \"./Project.css\";\n\nclass Project extends React.Component {\n  render() {\n    return (\n      <div className=\"project-card\">\n        <div className=\"image-container\">\n          <img src={`/images/${this.props.logo}`} className=\"img-responsive\" alt={this.props.name} />\n        </div>\n\n        <div className=\"info-container\">\n          <p className=\"name\">\n            <span>{this.props.name}</span> <span>Career site</span>\n          </p>\n\n          <div className=\"link-container\">\n            <a href={this.props.url} title={this.props.url} target=\"_blank\">\n              {this.props.url}\n            </a>\n          </div>\n\n          <div className=\"stack-container\">\n            <div className=\"stack\">\n              <img src=\"/images/icon-html5.png\" className=\"img-responsive\" alt=\"Logo\" />\n            </div>\n            <div className=\"stack\">\n              <img src=\"/images/icon-css3.png\" className=\"img-responsive\" alt=\"Logo\" />\n            </div>\n            <div className=\"stack\">\n              <img src=\"/images/icon-bootstrap.png\" className=\"img-responsive\" alt=\"Logo\" />\n            </div>\n            <div className=\"stack\">\n              <img src=\"/images/icon-sass.png\" className=\"img-responsive\" alt=\"Logo\" />\n            </div>\n            <div className=\"stack\">\n              <img src=\"/images/icon-photoshop.png\" className=\"img-responsive\" alt=\"Logo\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Project;\n","// Movies API\r\nconst Data = [\r\n  {\r\n    id: \"01\",\r\n    name: \"The Albrecht Group\",\r\n    url: \"https://www.agroupnc.com/\",\r\n    stack: [\"HTML5\", \"CSS3\", \"Bootstrap\", \"Sass\", \"Photoshop\"],\r\n    logo: \"albretch-group-logo.png\"\r\n  },\r\n  {\r\n    id: \"02\",\r\n    name: \"The Albrecht Group\",\r\n    url: \"https://www.agroupnc.com/\",\r\n    stack: [\"HTML5\", \"CSS3\", \"Bootstrap\", \"Sass\", \"Photoshop\"],\r\n    logo: \"albretch-group-logo.png\"\r\n  },\r\n\r\n  {\r\n    id: \"03\",\r\n    name: \"El fly\",\r\n    url: \"https://www.agroupnc.com/\",\r\n    stack: [\"HTML5\", \"CSS3\", \"Bootstrap\", \"Sass\", \"Photoshop\"],\r\n    logo: \"albretch-group-logo.png\"\r\n  }\r\n];\r\n\r\nexport default Data;\r\n","import React from \"react\";\nimport \"./Projects.css\";\nimport Project from \"./Project\";\nimport Data from \"./projectsAPI\";\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: Data\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.data.map(item => {\n          console.log(item);\n          \n          return (\n            <Project key={item.id} name={item.name} url={item.url} stack={item.stack} logo={item.logo} />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Projects;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Intro from './Intro';\nimport Projects from './Projects';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Intro />, document.getElementById('root'));\nReactDOM.render(<Projects />, document.getElementById('projects'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}